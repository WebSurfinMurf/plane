# Plane Environment Configuration Template
# This is a sanitized template - replace placeholder values with actual credentials

# Application URLs
WEB_URL=https://plane.yourdomain.com
CORS_ALLOWED_ORIGINS=https://plane.yourdomain.com

# Database Configuration (PostgreSQL)
DATABASE_HOST=your-database-host
DATABASE_PORT=5432
DATABASE_NAME=plane_db
DATABASE_USER=plane_user
DATABASE_PASSWORD=CHANGE_THIS_PASSWORD
DATABASE_URL=postgresql://plane_user:CHANGE_THIS_PASSWORD@your-database-host:5432/plane_db

# Redis Configuration
REDIS_HOST=redis
REDIS_PORT=6379
REDIS_PASSWORD=CHANGE_THIS_REDIS_PASSWORD
REDIS_URL=redis://:CHANGE_THIS_REDIS_PASSWORD@redis:6379/3
AMQP_URL=redis://:CHANGE_THIS_REDIS_PASSWORD@redis:6379/3

# Security Keys (Generate unique keys for production)
# Generate with: openssl rand -hex 32
SECRET_KEY=GENERATE_A_SECURE_SECRET_KEY_HERE
JWT_SECRET_KEY=GENERATE_ANOTHER_SECURE_SECRET_KEY_HERE

# CSRF Settings
CSRF_TRUSTED_ORIGINS=https://plane.yourdomain.com
ALLOWED_HOSTS=*

# Storage Configuration (S3-compatible storage like MinIO)
USE_MINIO=1
AWS_REGION=us-east-1
AWS_ACCESS_KEY_ID=YOUR_MINIO_ACCESS_KEY
AWS_SECRET_ACCESS_KEY=YOUR_MINIO_SECRET_KEY
AWS_S3_ENDPOINT_URL=http://your-minio-host:9000
AWS_S3_BUCKET_NAME=plane-uploads
FILE_SIZE_LIMIT=5242880

# Email Configuration (Optional - using SMTP)
# EMAIL_HOST=smtp.gmail.com
# EMAIL_HOST_USER=your-email@gmail.com
# EMAIL_HOST_PASSWORD=your-app-password
# EMAIL_PORT=587
# EMAIL_USE_TLS=1
# EMAIL_FROM=your-email@gmail.com
# DEFAULT_FROM_EMAIL=Plane <your-email@gmail.com>

# Authentication Settings
ENABLE_SIGNUP=1
ENABLE_EMAIL_PASSWORD=1
ENABLE_MAGIC_LINK_LOGIN=0
SECRET_KEY_EXPIRE_HOURS=72

# OIDC Configuration (Optional - for SSO)
# Configure via God Mode at /god-mode/authentication/oidc
# OIDC_CLIENT_ID=your-oidc-client-id
# OIDC_CLIENT_SECRET=your-oidc-client-secret

# API Configuration
SENTRY_DSN=
SENTRY_ENVIRONMENT=production
DEBUG=0  # Set to 0 for production
LOG_LEVEL=INFO  # Use INFO or WARNING for production

# Worker Configuration
CELERY_WORKER_CONCURRENCY=2
CELERY_WORKER_MAX_TASKS_PER_CHILD=200

# Nginx Configuration (Internal)
NGINX_PORT=80
LISTEN_HTTP_PORT=3001

# License (Community Edition)
PLANE_LICENSE=community

# Analytics (Optional)
ANALYTICS_ENABLED=0
TELEMETRY_ENABLED=0

# OpenAI Configuration (Optional for AI features)
# OPENAI_API_KEY=your-openai-api-key
# GPT_ENGINE=gpt-3.5-turbo

# GitHub Integration (Optional)
# GITHUB_CLIENT_ID=your-github-client-id
# GITHUB_CLIENT_SECRET=your-github-client-secret

# Slack Integration (Optional)
# SLACK_CLIENT_ID=your-slack-client-id
# SLACK_CLIENT_SECRET=your-slack-client-secret

# Gunicorn Workers
GUNICORN_WORKERS=2

# ===== NOTES FOR DEPLOYMENT =====
# 1. Generate secure keys:
#    SECRET_KEY: openssl rand -hex 32
#    JWT_SECRET_KEY: openssl rand -hex 32
#
# 2. Create PostgreSQL database and user:
#    CREATE USER plane_user WITH PASSWORD 'secure_password';
#    CREATE DATABASE plane_db OWNER plane_user;
#
# 3. Create MinIO bucket:
#    mc mb minio/plane-uploads
#    mc policy set public minio/plane-uploads
#
# 4. For Keycloak SSO integration:
#    - Create client in Keycloak with name "plane"
#    - Get client secret from Credentials tab
#    - Configure in Plane's God Mode (/god-mode/authentication/oidc)
#
# 5. Required Docker networks:
#    - postgres-net (for database access)
#    - redis-net (for Redis access)
#    - traefik-proxy (for external access)
#
# 6. Container deployment order:
#    1. PostgreSQL (if not using external)
#    2. Redis (if not using external)
#    3. MinIO (if not using external)
#    4. Plane API (backend)
#    5. Plane Worker (celery)
#    6. Plane Beat (scheduler)
#    7. Plane Web (frontend)
#    8. Plane Proxy (nginx)